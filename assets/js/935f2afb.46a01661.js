"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"sidebar":[{"type":"category","label":"Overview","items":[{"type":"link","label":"Conceptual Overview","href":"/docs/podium/conceptual_overview","docId":"podium/conceptual_overview","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Podlet Guides","items":[{"type":"link","label":"Getting Started","href":"/docs/podlet/getting_started","docId":"podlet/getting_started","unlisted":false},{"type":"link","label":"Fallbacks","href":"/docs/podlet/fallbacks","docId":"podlet/fallbacks","unlisted":false},{"type":"link","label":"Context","href":"/docs/podlet/context","docId":"podlet/context","unlisted":false},{"type":"link","label":"Proxying","href":"/docs/podlet/proxying","docId":"podlet/proxying","unlisted":false},{"type":"link","label":"Local Development","href":"/docs/podlet/local_development","docId":"podlet/local_development","unlisted":false},{"type":"link","label":"Podlet To Podlet Communication In The Browser","href":"/docs/podlet/podlet_to_podlet_communication","docId":"podlet/podlet_to_podlet_communication","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Layout Guides","items":[{"type":"link","label":"Getting Started","href":"/docs/layout/getting_started","docId":"layout/getting_started","unlisted":false},{"type":"link","label":"The Podium Context","href":"/docs/layout/context","docId":"layout/context","unlisted":false},{"type":"link","label":"Handling podlet unavailability","href":"/docs/layout/unavailable_podlets","docId":"layout/unavailable_podlets","unlisted":false},{"type":"link","label":"Passing URL params and query string values to podlets","href":"/docs/layout/dynamic_routes","docId":"layout/dynamic_routes","unlisted":false},{"type":"link","label":"Assets","href":"/docs/layout/assets","docId":"layout/assets","unlisted":false},{"type":"link","label":"Local Development","href":"/docs/layout/local_development","docId":"layout/local_development","unlisted":false},{"type":"link","label":"Handling redirects from podlets","href":"/docs/layout/handling_redirects","docId":"layout/handling_redirects","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"API Docs","items":[{"type":"link","label":"Getting Started","href":"/docs/api/getting_started","docId":"api/getting_started","unlisted":false},{"type":"link","label":"HttpIncoming","href":"/docs/api/incoming","docId":"api/incoming","unlisted":false},{"type":"link","label":"Assets","href":"/docs/api/assets","docId":"api/assets","unlisted":false},{"type":"link","label":"Document Template","href":"/docs/api/document","docId":"api/document","unlisted":false},{"type":"link","label":"@podium/podlet","href":"/docs/api/podlet","docId":"api/podlet","unlisted":false},{"type":"link","label":"@podium/layout","href":"/docs/api/layout","docId":"api/layout","unlisted":false},{"type":"link","label":"@podium/browser","href":"/docs/api/browser","docId":"api/browser","unlisted":false}],"collapsed":true,"collapsible":true}]},"docs":{"api/assets":{"id":"api/assets","title":"Assets","description":"When an asset is registered through the .css() or .js() methods in a podlet","sidebar":"sidebar"},"api/browser":{"id":"api/browser","title":"@podium/browser","description":"The @podium/browser package contains classes to provide browser based functionality when building Podium micro-frontends.","sidebar":"sidebar"},"api/document":{"id":"api/document","title":"Document Template","description":"When developing podlets which are to be composed together with other podlets","sidebar":"sidebar"},"api/getting_started":{"id":"api/getting_started","title":"Getting Started","description":"Podium consists of two parts; podlets and layouts, each with its own matching module to be used for development.","sidebar":"sidebar"},"api/incoming":{"id":"api/incoming","title":"HttpIncoming","description":"In the request/response life cycle of an HTTP request handled by Podium,","sidebar":"sidebar"},"api/layout":{"id":"api/layout","title":"@podium/layout","description":"In Podium a layout server is mainly responsible for fetching HTML fragments","sidebar":"sidebar"},"api/podlet":{"id":"api/podlet","title":"@podium/podlet","description":"Module for building page fragment servers for micro frontend architectures.","sidebar":"sidebar"},"layout/assets":{"id":"layout/assets","title":"Assets","description":"One of the key challenges when using micro-frontend systems like Podium is how to handle client side assets in each page fragment when everything is stitched together into a page.","sidebar":"sidebar"},"layout/context":{"id":"layout/context","title":"The Podium Context","description":"The purpose of the Podium Context is to give a podlet access to background contextual information about each incoming HTTP request so that it can tailor its response accordingly. You can read more regarding the Podium context and how it applies to podlets in the podlet context guide.","sidebar":"sidebar"},"layout/dynamic_routes":{"id":"layout/dynamic_routes","title":"Passing URL params and query string values to podlets","description":"There are occasions where you will want user interaction in a podlet to inform the behavior of other podlets. A great example of this is search. You might have one podlet that handles user search input and another podlet that displays search results.","sidebar":"sidebar"},"layout/getting_started":{"id":"layout/getting_started","title":"Getting Started","description":"This guide will walk you through how to get started building layouts for Podium in Node","sidebar":"sidebar"},"layout/handling_redirects":{"id":"layout/handling_redirects","title":"Handling redirects from podlets","description":"By default, the client registered in a layout will follow a redirect, and use the HTML response as if it came from the podlet directly.","sidebar":"sidebar"},"layout/local_development":{"id":"layout/local_development","title":"Local Development","description":"Once you have built one or more podlets, you will want to be able to test them in the more realistic context of a layout server, thereby allowing you to see the complete page and make sure all the pieces work together correctly.","sidebar":"sidebar"},"layout/unavailable_podlets":{"id":"layout/unavailable_podlets","title":"Handling podlet unavailability","description":"Podium is designed to anticipate and handle the possibility that 1 or more of your podlets may respond slowly or become unavailable from time to time. It does so via the concept of fallbacks.","sidebar":"sidebar"},"podium/conceptual_overview":{"id":"podium/conceptual_overview","title":"Conceptual Overview","description":"Podium is a library for building micro frontends. \\"Micro frontends\\" is a concept that advocates letting go of the monolith and instead putting all functionallity into smaller independent servers with each server being responsible for serving individual parts of the page in isolation (page fragments) and then composing them together into whole pages in separate layers. The composition is done by requesting each independent fragment over HTTP and then putting each fragment into the HTML page\'s markup.","sidebar":"sidebar"},"podlet/context":{"id":"podlet/context","title":"Context","description":"A podlet is intended to be used within multiple layouts but for this to be possible a podlet","sidebar":"sidebar"},"podlet/fallbacks":{"id":"podlet/fallbacks","title":"Fallbacks","description":"What happens if a podlet server is down? Unresponsive? Responding too slowly? By default Podium will simply render an empty string in its place. You might, however, want to have some measure of control over what gets shown. Enter fallbacks.","sidebar":"sidebar"},"podlet/getting_started":{"id":"podlet/getting_started","title":"Getting Started","description":"This guide will show you how to get started building podlets for Podium in Node","sidebar":"sidebar"},"podlet/local_development":{"id":"podlet/local_development","title":"Local Development","description":"It is intended that podlets be developed in isolation from layouts and other podlets. This isolation can introduce challenges into local development due to some components normally provided by a layout (such as headers and Assets) not being available.","sidebar":"sidebar"},"podlet/podlet_to_podlet_communication":{"id":"podlet/podlet_to_podlet_communication","title":"Podlet To Podlet Communication In The Browser","description":"For situations where 2 or more podlets need to communicate with each other without a page refresh, Podium provides a client side library called @podium/browser that provides a pubsub class called MessageBus.","sidebar":"sidebar"},"podlet/proxying":{"id":"podlet/proxying","title":"Proxying","description":"While Podium does not enforce what type of infrastructure is used to run podlet and layout servers, a common decision that will have to be made when using Podium is whether podlet servers should be publicly accessible or whether they should be accessible only through the layout server. This decision can impact how client side code is written due to a common need to communicate back directly from client code to podlet server.","sidebar":"sidebar"}}}')}}]);